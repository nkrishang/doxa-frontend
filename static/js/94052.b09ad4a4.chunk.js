"use strict";(self.webpackChunkdoxa_frontend=self.webpackChunkdoxa_frontend||[]).push([[94052],{94052:(e,n,a)=>{a.d(n,{onSessionProposal:()=>t});var s=a(27197),o=a(21225);async function t(e){const{wallet:n,walletConnectClient:a,event:t,chains:i,onConnect:c}=e,r=n.getAccount();if(!r)throw new Error("No account connected to provided wallet");const p=t.verifyContext?.verified?.origin;p&&await async function(e){let{walletConnectClient:n,origin:a}=e;const t=await(0,o.S5)();for(const o of t)o.origin===a&&await(0,s.EF)({session:o,walletConnectClient:n})}({origin:p,walletConnectClient:a});const l=await async function(e){let{account:n,walletConnectClient:a,sessionProposal:s,chains:o}=e;if(!s.params.requiredNamespaces?.eip155&&!s.params.optionalNamespaces?.eip155)throw new Error("No EIP155 namespace found in Wallet Connect session proposal");const t={chains:[...Array.from(new Set([...s.params.requiredNamespaces?.eip155?.chains?.map((e=>`${e}:${n.address}`))??[],...s.params.optionalNamespaces?.eip155?.chains?.map((e=>`${e}:${n.address}`))??[],...o?.map((e=>`eip155:${e.id}:${n.address}`))??[]]))],methods:[...s.params.requiredNamespaces?.eip155?.methods??[],...s.params.optionalNamespaces?.eip155?.methods??[]],events:[...s.params.requiredNamespaces?.eip155?.events??[],...s.params.optionalNamespaces?.eip155?.events??[]]},i=await a.approve({id:s.id,namespaces:{eip155:{accounts:t.chains,methods:t.methods,events:t.events}}}),c=await i.acknowledged();return{topic:c.topic,origin:s.verifyContext?.verified?.origin||"Unknown origin"}}({account:r,walletConnectClient:a,sessionProposal:t,chains:i});await(0,o.E1)(l),n.subscribe("disconnect",(()=>{(0,s.EF)({session:l,walletConnectClient:a})})),c?.(l)}}}]);
//# sourceMappingURL=94052.b09ad4a4.chunk.js.map